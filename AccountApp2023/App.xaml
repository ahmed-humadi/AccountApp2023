<Application x:Class="AccountApp2023.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AccountApp2023"
             xmlns:UC="clr-namespace:AccountApp2023.CustUserCont"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <Style x:Key="buttonsStyle" TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                Focusable="False">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Gray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="LightGray"/>
                               
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>

        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>
        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>
        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>


        <SolidColorBrush x:Key="TextBox.Static.Border" Color="Gray"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="LightGray"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="LightGray"/>
        <!--MyCombo box Style with loading control-->
        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid Focusable="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"
                        Focusable="False"
            Grid.ColumnSpan="2"
            
            BorderThickness="1">
                    <Border.BorderBrush>
                        <SolidColorBrush x:Name="ToggleBrush" Color="Gray"/>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="White" />
                                    <GradientStop Color="White"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
                        Focusable="False"
            CornerRadius="2,0,0,2"
            Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="White"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow" Focusable="False"
                      
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                    <Path.Fill>
                        <SolidColorBrush Color="Black"/>
                    </Path.Fill>
                </Path>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                </Trigger>
                
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox"  
                 TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" TargetName="PART_ContentHost" Value="{StaticResource TextBox.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="BorderBrush" TargetName="PART_ContentHost" Value="{StaticResource TextBox.Focus.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="MyComboBoxStyleWithToggle" TargetType="{x:Type UC:MyComboBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
         
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UC:MyComboBox}">
                        <Grid Background="White"
                              >
                            <ToggleButton x:Name="ToggleButton" 
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="True"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                        RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                      Style="{x:Null}"
                                      Template="{StaticResource ComboBoxTextBox}"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      Focusable="False"
                                      Margin="3,0,20,0"
                                      Visibility="Visible">
                                <TextBox.BorderBrush>
                                    <SolidColorBrush x:Name="TextBoxBrush" Color="Transparent"/>
                                </TextBox.BorderBrush>
                            </TextBox>
                            <Popup x:Name="Popup"
                             
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      Focusable="False"
                                   
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                                    Focusable="False"
                      BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush x:Name="BorderSolidColorBrush1" Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" Focusable="False"
                                                 
                            SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    Focusable="True"
                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer >
                                    <!--it is binding to the isloading depency property of MyCombo Class-->
                                    <UC:Loading IsLoading="{TemplateBinding IsLoading}" Margin="20"/>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                   Value="false">
                                <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                   Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                                <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="4" />
                                <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,2,0,0" />
                            </Trigger>
                     
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyComboBoxStyleSearchable" TargetType="{x:Type UC:MyComboBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UC:MyComboBox}">
                        <Grid Background="White">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ToggleButton"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="LightGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                Value="LightGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                   
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable"/>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups >
                            <!--i replaced the toggle whit border-->
                            <Border x:Name="ToggleButton"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="1"
                                    Grid.Column="2"
                                    Focusable="False">
                            </Border>
                            <!--<ContentPresenter x:Name="ContentSite"
                                              Focusable="True"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="20,0,0,0"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch">
                            </ContentPresenter>-->

                            <TextBox x:Name="PART_EditableTextBox"
                                      Style="{x:Null}"
                                      Template="{StaticResource ComboBoxTextBox}"
                                   
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      Margin="20,0,0,0"
                                      Focusable="{TemplateBinding IsEditable}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Visibility="Visible">
                            </TextBox>
                            <Button x:Name="PART_SearchButton" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                                    Focusable="True"
                                    FontFamily="Segoe MDL2 Assets" 
                                    FontSize="15" BorderBrush="Transparent"
                                    Background="Transparent"
                                    HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                    Style="{StaticResource buttonsStyle}">
                                <Button.Content>
                                       
                                </Button.Content>
                            </Button>
                            <Popup x:Name="Popup"  Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True" Focusable="True" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                             Focusable="True"    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"  BorderThickness="1"
                                            Focusable="False">
                                        <Border.BorderBrush>
                                            <SolidColorBrush x:Name="BorderSolidColorBrush1" Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True"
                                                   Focusable="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Local" 
                                                    Focusable="True"/>
                                    </ScrollViewer>
                                    <!--it is binding to the isloading depency property of MyCombo Class-->
                                    <UC:Loading IsLoading="{TemplateBinding IsLoading}" Margin="20"/>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"  Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"  Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--this is just for the Account Table until i will changed it to Mycombobox-->
        <Style x:Key="MyComboBoxStyleSearchable1" TargetType="{x:Type UC:MyComboBox1}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UC:MyComboBox1}">
                        <Grid Background="White">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ToggleButton"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="LightGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                Value="LightGray" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                 
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                   
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups >
                            <!--i replaced the toggle whit border-->
                            <Border x:Name="ToggleButton"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="1"
                                    Grid.Column="2"
                                    Focusable="False">
                            </Border>
                            <!--<ContentPresenter x:Name="ContentSite"
                                              Focusable="True"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="20,0,0,0"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch">
                            </ContentPresenter>-->

                            <TextBox x:Name="PART_EditableTextBox"
                                      Style="{x:Null}"
                                      Template="{StaticResource ComboBoxTextBox}"
                                   
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      Margin="20,0,0,0"
                                      Focusable="{TemplateBinding IsEditable}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Visibility="Visible">
                            </TextBox>
                            <Button x:Name="PART_SearchButton" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                                    Focusable="False"
                                    FontFamily="Segoe MDL2 Assets" 
                                    FontSize="15" BorderBrush="Transparent"
                                    Background="Transparent"
                                    HorizontalContentAlignment="Center"
                                    Style="{StaticResource buttonsStyle}">
                                <Button.Content>
                                    
                                </Button.Content>
                            </Button>
                            <Popup x:Name="Popup"  Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True" Focusable="True" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                             Focusable="True"    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"  BorderThickness="1"
                                            Focusable="False">
                                        <Border.BorderBrush>
                                            <SolidColorBrush x:Name="BorderSolidColorBrush1" Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True"
                                                   Focusable="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Local" 
                                                    Focusable="True"/>
                                    </ScrollViewer>
                                    <!--it is binding to the isloading depency property of MyCombo Class-->
                                    <UC:Loading IsLoading="{TemplateBinding IsLoading}" Margin="20"/>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"  Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"  Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="PART_Border"
                                Padding="2"
                                SnapsToDevicePixels="true"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                />
                            
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" Value="1" TargetName="PART_Border"/>
                                <Setter Property="BorderBrush" Value="LightGray" TargetName="PART_Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--MyCombo box Style with loading control-->
        <!--****************************************************************************-->
        <!--Tex Box Style-->
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
          
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                          Padding="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--Tex Box Style-->
        <!--Search Text Box Style-->
        <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_SearchButton" Grid.Column="0" Background="White" 
                                        BorderBrush="Transparent"   BorderThickness="0" Style="{StaticResource buttonsStyle}">
                   
                                    <Button.Content>
                                        <TextBlock FontSize="15" Text="" Background="Transparent" 
                                        FontFamily="Segoe MDL2 Assets" />
                                    </Button.Content>
                                </Button>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" Grid.Column="1"
                                              VerticalAlignment="Center"
                                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--****************************************************************************-->
        <!--ListView  Style With add button-->
        <Style x:Key="ListViewStyleWihtAddButton" TargetType="{x:Type UC:MyListView}">
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="SnapsToDevicePixels"
                            Value="true" />
            <Setter Property="OverridesDefaultStyle"
                            Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                            Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                            Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                            Value="true" />
            <Setter Property="VerticalContentAlignment"
                            Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UC:MyListView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                           <Grid Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Name="PART_AddButton" 
                                    IsEnabled ="{TemplateBinding EnableButton}"
                                    BorderThickness="1"
                                    Style="{StaticResource buttonsStyle}"
                                    FontSize="14"
                                    BorderBrush="WhiteSmoke" Background="WhiteSmoke"
                                    VerticalAlignment="Top"
                                    >
                                <Button.Content>
                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="">

                                    </TextBlock>
                                </Button.Content>
                            </Button>
                                <ScrollViewer Grid.Column="1" x:Name="PART_ScrollViewer">
                                <ScrollViewer.Style>
                                    <Style TargetType="ScrollViewer">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ScrollViewer">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>

                                                        <DockPanel x:Name="dockPanel" Margin="{TemplateBinding Padding}">
                                                            <ScrollViewer DockPanel.Dock="Top"
                                                                        HorizontalScrollBarVisibility="Hidden"
                                                                            VerticalScrollBarVisibility="Hidden"
                                                                                Focusable="false">
                                                                <GridViewHeaderRowPresenter Margin="0,0,0,0"
                                                                                                    Columns="{Binding Path=TemplatedParent.View.Columns,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderContainerStyle="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderTemplate="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderTemplate,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderTemplateSelector="{Binding 
                                                                                                Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          AllowsColumnReorder="{Binding
                                                                                                Path=TemplatedParent.View.AllowsColumnReorder,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderContextMenu="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderContextMenu,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderToolTip="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderToolTip,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          SnapsToDevicePixels="{TemplateBinding
                                                                                                SnapsToDevicePixels}">

                                                                </GridViewHeaderRowPresenter>
                                                            </ScrollViewer>
                                                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                                                            KeyboardNavigation.DirectionalNavigation="Local"
                                                                                            CanContentScroll="True"
                                                                                            CanHorizontallyScroll="False"
                                                                                            CanVerticallyScroll="False"
                                                                                         
                                                                                            >

                                                            </ScrollContentPresenter>
                                                        </DockPanel>

                                                        <ScrollBar Name="PART_HorizontalScrollBar"
                                                                             Orientation="Horizontal"
                                                                             Grid.Row="1"
                                                                             Maximum="{TemplateBinding ScrollableWidth}"
                                                                             ViewportSize="{TemplateBinding ViewportWidth}"
                                                                             Value="{TemplateBinding HorizontalOffset}"
                                                                             Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">

                                                        </ScrollBar>

                                                        <ScrollBar Name="PART_VerticalScrollBar"
                                                                             Grid.Column="1"
                                                                             Maximum="{TemplateBinding ScrollableHeight}"
                                                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                                                             Value="{TemplateBinding VerticalOffset}"
                                                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">

                                                        </ScrollBar>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollViewer.Style>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Grid> 
                        </Border>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ListView Style-->
        <Style x:Key="ListViewStyle" TargetType="{x:Type UC:MyListView}">
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="SnapsToDevicePixels"
                            Value="true" />
            <Setter Property="OverridesDefaultStyle"
                            Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                            Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                            Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                            Value="true" />
            <Setter Property="VerticalContentAlignment"
                            Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UC:MyListView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                >
                            <Grid Name="Grid" Background="{TemplateBinding Background}">
                              
                                <ScrollViewer x:Name="PART_ScrollViewer">
                                    <ScrollViewer.Style>
                                        <Style TargetType="ScrollViewer">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ScrollViewer">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*" />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>

                                                            <DockPanel x:Name="dockPanel" Margin="{TemplateBinding Padding}">
                                                                <ScrollViewer DockPanel.Dock="Top"
                                                                        HorizontalScrollBarVisibility="Hidden"
                                                                            VerticalScrollBarVisibility="Hidden"
                                                                                Focusable="false">
                                                                    <GridViewHeaderRowPresenter Margin="0,0,0,0"
                                                                                                    Columns="{Binding Path=TemplatedParent.View.Columns,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderContainerStyle="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderTemplate="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderTemplate,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderTemplateSelector="{Binding 
                                                                                                Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          AllowsColumnReorder="{Binding
                                                                                                Path=TemplatedParent.View.AllowsColumnReorder,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderContextMenu="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderContextMenu,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          ColumnHeaderToolTip="{Binding
                                                                                                Path=TemplatedParent.View.ColumnHeaderToolTip,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                                                                          SnapsToDevicePixels="{TemplateBinding
                                                                                                SnapsToDevicePixels}">

                                                                    </GridViewHeaderRowPresenter>
                                                                </ScrollViewer>
                                                                <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                                                            KeyboardNavigation.DirectionalNavigation="Local"
                                                                                            CanContentScroll="True"
                                                                                            CanHorizontallyScroll="False"
                                                                                            CanVerticallyScroll="False">

                                                                </ScrollContentPresenter>
                                                            </DockPanel>

                                                            <ScrollBar Name="PART_HorizontalScrollBar"
                                                                             Orientation="Horizontal"
                                                                             Grid.Row="1"
                                                                             Maximum="{TemplateBinding ScrollableWidth}"
                                                                             ViewportSize="{TemplateBinding ViewportWidth}"
                                                                             Value="{TemplateBinding HorizontalOffset}"
                                                                             Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">

                                                            </ScrollBar>

                                                            <ScrollBar Name="PART_VerticalScrollBar"
                                                                             Grid.Column="1"
                                                                             Maximum="{TemplateBinding ScrollableHeight}"
                                                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                                                             Value="{TemplateBinding VerticalOffset}"
                                                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">

                                                            </ScrollBar>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ScrollViewer.Style>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ListView Style-->

        <!--****************************************************************************-->
        <!--ListView ItemContainer Style-->
        <Style x:Key="ListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" Padding="2"
                                        SnapsToDevicePixels="true"
                                        Background="Transparent"
                                        BorderBrush="LightGray"
                                        BorderThickness="0,1,0,0">
                            <GridViewRowPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger  Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="WhiteSmoke"/>
                            </Trigger>
                            <!--this when you a button or text is press the row set as selected row-->
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="IsSelected" Value="True"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ListView ItemContainer Style-->
        <!--****************************************************************************-->
        <!--GridView ColumnHeaderContainer Style-->
        <Style x:Key="GridViewColumnHeaderContainerStyle" TargetType="GridViewColumnHeader">
           
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid>

                            <Border x:Name="HeaderBorder" BorderThickness="1" 
                                                    >
                                <Border.Background>
                                    <SolidColorBrush x:Name="HeaderBackGround" Color="WhiteSmoke"/>
                                </Border.Background>
                                <Border.BorderBrush>
                                    <SolidColorBrush x:Name="HeaderBorderBrush" Color="WhiteSmoke"/>
                                </Border.BorderBrush>
                                <ContentPresenter x:Name="HeaderContent"
                                                                    Margin="0,0,0,0"
                                                                    RecognizesAccessKey="True"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" 
                                                   Margin="0,0,-9,0">
                                <Thumb.Style>
                                    <Style TargetType="Thumb">
                                        <Setter Property="Width" Value="18" />
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="LightGray" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--GridView ColumnHeaderContainer Style-->
        <!--****************************************************************************-->
        <!--***********************************Menu Style*****************************************-->
        <!--Menu Style-->
        <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
    
            <Setter Property="SnapsToDevicePixels"  Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Transparent"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="WhiteSmoke"/>
                            </Border.Background>
                            <StackPanel ClipToBounds="True" Orientation="Horizontal"
                                                  IsItemsHost="True"/>
                           
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Menu Style-->
        <!--ScrollViewer for a MenuItem-->
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
        <Style x:Key="MenuScrollViewer"
       TargetType="{x:Type ScrollViewer}"
       BasedOn="{x:Null}">
            <Setter Property="HorizontalScrollBarVisibility"
          Value="Hidden" />
            <Setter Property="VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="1"
                  Grid.Column="0">
                                <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                            </Border>


                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- MenuItem.SeparatorStyle-->
        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
            <Setter Property="Height"
          Value="1" />
            <Setter Property="Margin"
          Value="0,4,0,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- MenuItem.SeparatorStyle-->
        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                Background="WhiteSmoke">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                    <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                    <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />
                    <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="False">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>   
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->
        <!-- SubmenuItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
          BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
              BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="LightGray"/>

                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="LightGray"/>
                        </Border.Background>
                        <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                            <Path.Stroke>
                                <SolidColorBrush Color="Black" />
                            </Path.Stroke>
                        </Path>
                    </Border>
                    <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,0,2"
                 DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
                <Trigger Property="Icon"
             Value="{x:Null}">
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked"
             Value="true">
                    <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable"
             Value="true">
                    <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
          BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,2,2"
                 DockPanel.Dock="Right" />
                    <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="Black" />
                        </Path.Fill>
                    </Path>
                    <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="LightGray"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="LightGray"/>
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
             Value="{x:Null}">
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted"
             Value="true">
                    <Setter Property="Background"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush"
              TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                    <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="4" />
                    <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
             Value="false">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="LightGray"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- SubmenuItem -->
        <!--MenuItem Style-->
        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">

            <Setter Property="OverridesDefaultStyle"  Value="True" />

            <Style.Triggers>
                <Trigger Property="Role"    Value="TopLevelHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                    <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
                </Trigger>
                <Trigger Property="Role"
             Value="TopLevelItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role"
             Value="SubmenuHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role"
             Value="SubmenuItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

       
    </Application.Resources>
</Application>
